{"version":3,"sources":["reportWebVitals.js","components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","containers/ErrorBoundary.jsx","containers/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","className","src","alt","CardList","robots","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBounday","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchInput","target","value","fetch","response","json","users","filterRoboList","filter","robot","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCMCQ,EAXF,SAACC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,6BAAKJ,IACL,4BAAIC,QCcDI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAOV,GAClBC,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,OAHhBQ,SCKlBC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCKXI,G,MAZA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CACRC,UAAU,SACVC,OAAO,kBACPC,OAAO,SAHX,SAKKrB,EAAMsB,aCeJC,E,kDArBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAG/B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAGAG,KAAK5B,MAAMsB,a,GAjBHQ,aCsDZC,E,kDA/CX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SACD,CACIK,YAAYD,EAAME,OAAOC,SAfjC,EAAKZ,MAAQ,CACThB,OAAO,GACP0B,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAACrB,OAAOgC,S,oBAWzC,WACI,MAAgCZ,KAAKJ,MAA7BhB,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,YACVO,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAMzC,KAAK0C,oBAAoBC,SAASX,EAAYU,wBAE/D,OAAIpC,EAAOsC,OAIH,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQiC,WAR3B,oBAAIrC,UAAU,UAAd,6B,GA7BD0B,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.72fe0b49.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { id, name, email } = props;\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, index) => {\r\n                    return (\r\n                        <Card \r\n                            key={index} \r\n                            id={robots[index].id} \r\n                            name={robots[index].name} \r\n                            email={robots[index].email} \r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ \r\n            overflowY:\"scroll\",\r\n            border:\"2px solid black\",\r\n            height:\"800px\"\r\n        }} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBounday extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError : true });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Noop Something is wrong.</h1>\r\n        }\r\n        else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBounday;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBounday from './ErrorBoundary';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots:[],\r\n            searchInput:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState(\r\n            {\r\n                searchInput:event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchInput } = this.state;\r\n        const filterRoboList = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchInput.toLocaleLowerCase())\r\n        })\r\n        if(!robots.length){\r\n            return <h1 className=\" pa5 tc\">Loading....</h1>\r\n        }else{\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBounday>\r\n                            <CardList robots={filterRoboList} />\r\n                        </ErrorBounday>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}